/* 1.1 */
/* 
Question 1

We want to understand more about the movies that families are watching. The following categories are considered family movies: Animation, Children, Classics, Comedy, Family and Music.

Create a query that lists each movie, the film category it is classified in, and the number of times it has been rented out.
*/


WITH A1 AS (SELECT *
			FROM film AS f
      			JOIN film_category AS fc
			ON f.film_id = fc.film_id
			JOIN category AS c
      			ON fc.category_id = c.category_id
      			JOIN Inventory AS i
      			ON i.film_id = f.film_id
      			JOIN rental AS r
      			ON i.inventory_id = r.inventory_id
      			WHERE name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
      			)


SELECT title AS film_title, name AS category_name, COUNT(*) AS rental_count
	FROM A1
	GROUP BY 1,2
	ORDER BY category_name, film_title, rental_count

/* 1.2 */
/*
Question 2

Now we need to know how the length of rental duration of these family-friendly movies compares to the duration that all movies are rented for. Can you provide a table with the movie titles and divide them into 4 levels (first_quarter, second_quarter, third_quarter, and final_quarter) based on the quartiles (25%, 50%, 75%) of the rental duration for movies across all categories? Make sure to also indicate the category that these family-friendly movies fall into.
*/

SELECT f.title, c.name, f.rental_duration, NTILE(4) OVER (ORDER BY f.rental_duration) AS standard_quartile
	From film AS f
	JOIN film_category AS fc
	ON f.film_id = fc.film_id
	JOIN category AS c
	ON c.category_id = fc.category_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
ORDER BY 3

/* 1.3 */
/*
Question 3

Finally, provide a table with the family-friendly film category, each of the quartiles, and the corresponding count of movies within each combination of film category for each corresponding rental duration category. The resulting table should have three columns:

    Category
    Rental length category
    Count
*/

With A1 AS (SELECT title, name, rental_duration, NTILE(4) OVER (ORDER BY rental_duration) AS standard_quartile
	FROM film AS f
	Join film_category AS fc
	On f.film_id=fc.film_id
	Join category AS c
	On fc.category_id=c.category_id
where name IN ('Animation','Children','Classics','Comedy','Family','Music'))

Select name, standard_quartile, Count(*) 
From A1
Group by 1,2
Order by 1,2

/* 2.1 */
/*
Question 1:

We want to find out how the two stores compare in their count of rental orders during every month for all the years we have data for. Write a query that returns the store ID for the store, the year and month and the number of rental orders each store has fulfilled for that month. Your table should include a column for each of the following: year, month, store ID and count of rental orders fulfilled during that month. 
*/

SELECT DATE_PART('month',r.rental_date) AS Rental_month, DATE_PART('year',r.rental_date) AS Rental_year, s.store_id,
count(*) AS count_rentals
	FROM rental AS r
	JOIN staff AS s
	ON r.staff_id = s.staff_id
GROUP BY 1,2,3
ORDER BY count_rentals DESC;

/* 2.2 */
/*
Question 2

We would like to know who were our top 10 paying customers, how many payments they made on a monthly basis during 2007, and what was the amount of the monthly payments. Can you write a query to capture the customer name, month and year of payment, and total payment amount for each month by these top 10 paying customers?
*/

WITH top_customers AS (
 		    SELECT C.customer_id,
 				   SUM(p.amount) AS total_payment
 			  FROM customer As c
 			  JOIN payment AS p
 			 ON c.customer_id = p.customer_id
 		  GROUP BY 1
 		  ORDER BY 2 DESC
 		     LIMIT 10
 )

 	SELECT c.first_name || ' ' || c.last_name AS Fullname,
 		   DATE_TRUNC('month', p.payment_date) AS pay_mon,
 		   COUNT(p.payment_id) AS pay_countPerMon,
 		   SUM(p.amount) AS pay_amount
 	  FROM customer c
 	  JOIN payment p
 	 ON c.customer_id=p.customer_id
 	  JOIN top_customers As tc
 	 ON c.customer_id=tc.customer_id
   GROUP BY 1, 2
   ORDER BY 1, 2
   
/* 2.3 */
/*
Question 2

We would like to know who were our top 10 paying customers, how many payments they made on a monthly basis during 2007, and what was the amount of the monthly payments. Can you write a query to capture the customer name, month and year of payment, and total payment amount for each month by these top 10 paying customers?
*/


WITH t1 AS (SELECT (first_name || ' ' || last_name) AS Fullname, 
                   c.customer_id, 
                   p.amount, 
                   p.payment_date
              FROM customer AS c
                   JOIN payment AS p
                    ON c.customer_id = p.customer_id),

     t2 AS (SELECT t1.customer_id
              FROM t1
             GROUP BY 1
             ORDER BY SUM(t1.amount) DESC
             LIMIT 10),


t3 AS (SELECT t1.Fullname,
              DATE_PART('month', t1.payment_date) AS payment_month, 
              DATE_PART('year', t1.payment_date) AS payment_year,
              COUNT (*),
              SUM(t1.amount),
              SUM(t1.amount) AS pay_amount,
              LEAD(SUM(t1.amount)) OVER(PARTITION BY t1.Fullname ORDER BY DATE_PART('month', t1.payment_date)) AS lead,
              LEAD(SUM(t1.amount)) OVER(PARTITION BY t1.Fullname ORDER BY DATE_PART('month', t1.payment_date)) - SUM(t1.amount) AS lead_difference
         FROM t1
              JOIN t2
               ON t1.customer_id = t2.customer_id
        WHERE t1.payment_date BETWEEN '20070101' AND '20080101'
        GROUP BY 1, 2, 3
        ORDER BY 1, 3, 2)

SELECT t3.*,
       CASE
           WHEN t3.lead_difference = (SELECT MAX(t3.lead_difference) FROM t3 ORDER BY 1 DESC LIMIT 1) THEN 'this is the maximum'
           ELSE NULL
           END AS is_max					
  FROM t3
 ORDER BY 1;
